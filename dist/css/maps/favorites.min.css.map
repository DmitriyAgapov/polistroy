{"version":3,"sources":["favorites/favorites.scss","favorites/favorites.css","../styles/helpers/_mixins-svg.scss"],"names":[],"mappings":"AAEA,oBCDA,0BC+EC,QAAA,aACA,iBAAA,uBD7EC,gBAAA,MAAA,MAGF,aDAQ,QAAA,mBAAA,QAAA,mBAAA,QAAA,YACA,YACA,gBAAA,KAEI,SAAA,SATZ,MAAA,QCWE,UAAA,EAGF,oBACE,QAAA,GACA,SAAA,OACA,IAAA,EDjBF,KAAA,ECmBE,MAAA,KACA,OAAA,KACA,oBAAA,OAAA,OAGF,0BACE,QAAA,GACA,SAAA,ODWF,IAAA,EAEQ,KAAA,ECVN,MAAA,KDQF,OAAA,KAoBQ,oBAAA,OAAA,OCvBR,qBD2CE,QAAA,ECvCF,oCACE,QAAA,KAGF,kBDyDI,QAAA,EACA,QAAA,MACA,MAAA,KACA,OAAA,KACA,YAAA,UCrDJ,kBDyDI,iBAAA,QACA,cAAA,IACA,MAAA,KACA,OAAA,KCvDF,UAAA,KACA,YAAA,IACA,MAAA,KACA,QAAA,YAAA,QAAA,YAAA,QAAA,KACA,iBAAA,OAAA,cAAA,OAAA,gBAAA,OACA,WAAA,OACA,kBAAA,OAAA,eAAA,OAAA,YAAA,OACA,SAAA,SACA,IAAA,KACA,MAAA","file":"../favorites.min.css","sourcesContent":["@import \"../../styles/helpers/_helpers\";\r\n\r\n.favorites {\r\n    a {\r\n        display: inline-flex;\r\n        //padding-left: 27px;\r\n        border: none;\r\n        text-decoration: none;\r\n        position: relative;\r\n        color: #84888b;\r\n\r\n            font-size: 0;\r\n\r\n\r\n        &:before {\r\n            content: '';\r\n            position: static;\r\n            top: 0;\r\n            left: 0;\r\n            @include svgsprite(fav-ico);\r\n        }\r\n        &:hover {\r\n            //color: $color2;\r\n            &:before {\r\n                content: '';\r\n                position: static;\r\n                top: 0;\r\n                left: 0;\r\n                @include svgsprite(fav-ico-red);\r\n            }\r\n        }\r\n    }\r\n    a.is-active {\r\n        //color: $color2;\r\n        &:before {\r\n            //@include svgsprite(star-small-3);\r\n        }\r\n    }\r\n}\r\n.favorites_go-page {\r\n    a {\r\n        padding: 0;\r\n        //color: $white;\r\n        &:before {\r\n            //@include svgsprite(star-big);\r\n        }\r\n        &:hover {\r\n            //color: $white;\r\n            &:before {\r\n                //@include svgsprite(star-big-3);\r\n            }\r\n        }\r\n        &.is-active {\r\n            &:before {\r\n                //@include svgsprite(star-big-3);\r\n            }\r\n        }\r\n    }\r\n    .favorites__text {\r\n        display: none;\r\n    }\r\n}\r\n//.favorites_go-page.favorites_mobile {\r\n//\ta {\r\n//\t\t//color: $color2;\r\n//\t\t&:before {\r\n//\t\t\t//@include svgsprite(star-4);\r\n//\t\t}\r\n//\t\t&.is-active {\r\n//\t\t\t&:before {\r\n//\t\t\t\t//@include svgsprite(star-big-3);\r\n//\t\t\t}\r\n//\t\t}\r\n//\t}\r\n//}\r\n.favorites_node {\r\n    a {\r\n        //color: $color2;\r\n\t\tpadding: 0;\r\n\t\tdisplay: block;\r\n\t\twidth: 21px;\r\n\t\theight: 20px;\r\n        text-indent: -999999px;\r\n        &:before {\r\n            //@include svgsprite(star-3);\r\n        }\r\n        &:hover {\r\n            &:before {\r\n                //@include svgsprite(star-3);\r\n            }\r\n        }\r\n    }\r\n    a.is-active {\r\n        &:before {\r\n            //@include svgsprite(star-big-3);\r\n        }\r\n    }\r\n}\r\n.favorites__count {\r\n    background-color: #D21818;\r\n    border-radius: 50%;\r\n    width: 19px;\r\n    height: 19px;\r\n    font-size: 13px;\r\n    font-weight: 700;\r\n    color: #ffffff;\r\n    display: flex;\r\n    justify-content: center;\r\n    text-align: center;\r\n    align-items: center;\r\n    position: absolute;\r\n    top: -5px;\r\n    right: -4px;\r\n}",".favorites a:before,\n.favorites a:hover:before {\n  display: inline-block;\n  background-image: url(\"../img/sprite.svg\");\n  background-size: 521px 497px;\n}\n\n.favorites a {\n  display: inline-flex;\n  border: none;\n  text-decoration: none;\n  position: relative;\n  color: #84888b;\n  font-size: 0;\n}\n\n.favorites a:before {\n  content: '';\n  position: static;\n  top: 0;\n  left: 0;\n  width: 27px;\n  height: 24px;\n  background-position: -137px -331px;\n}\n\n.favorites a:hover:before {\n  content: '';\n  position: static;\n  top: 0;\n  left: 0;\n  width: 27px;\n  height: 24px;\n  background-position: -173px -331px;\n}\n\n.favorites_go-page a {\n  padding: 0;\n}\n\n.favorites_go-page .favorites__text {\n  display: none;\n}\n\n.favorites_node a {\n  padding: 0;\n  display: block;\n  width: 21px;\n  height: 20px;\n  text-indent: -999999px;\n}\n\n.favorites__count {\n  background-color: #D21818;\n  border-radius: 50%;\n  width: 19px;\n  height: 19px;\n  font-size: 13px;\n  font-weight: 700;\n  color: #ffffff;\n  display: flex;\n  justify-content: center;\n  text-align: center;\n  align-items: center;\n  position: absolute;\n  top: -5px;\n  right: -4px;\n}","////\r\n/// @author Mike Street\r\n/// @group Sprite\r\n////\r\n\r\n\r\n// The following variable and function originate from the sass-mq library.\r\n// If you have already included it, you can eliminate the below\r\n// https://github.com/sass-mq/sass-mq/blob/master/_mq.scss\r\n\r\n/// Base font size on the `<body>` element\r\n/// @type Number (unit)\r\n$mq-base-font-size: 16px !default;\r\n\r\n/// Convert pixels to ems\r\n///\r\n/// @param {Number} $px - value to convert\r\n/// @param {Number} $base-font-size ($mq-base-font-size) - `<body>` font size\r\n///\r\n/// @example scss\r\n///  $font-size-in-ems: mq-px2em(16px);\r\n///  p { font-size: mq-px2em(16px); }\r\n///\r\n/// @requires $mq-base-font-size\r\n/// @returns {Number}\r\n@function mq-px2em($px, $base-font-size: $mq-base-font-size) {\r\n    @if unitless($px) {\r\n        @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\r\n        @return mq-px2em($px + 0px); // That may fail.\r\n    } @else if unit($px) == em {\r\n        @return $px;\r\n    }\r\n    @return $px;\r\n    // @return ($px / $base-font-size) * 1em;\r\n}\r\n\r\n\r\n/// Set the `$sprite` map\r\n/// @group sprite\r\n$sprite: map-get($icons, sprite) !default;\r\n\r\n/// Retrive an attributes value for a specific icon in the sprite map\r\n/// @param {string} $icon - The name of the icon\r\n/// @param {string} $attr - The attribute you wish to retrieve (e.g. width)\r\n@function sprite-attr($icon, $attr) {\r\n\t$newIcon: map-get($icons, $icon);\r\n\t@if $newIcon == null {\r\n\t\t@warn \"Can't find an icon with the name #{$icon}\";\r\n\t}\r\n\t@return map-get($newIcon, $attr);\r\n}\r\n\r\n/// Create a map with the specified icon of attributes\r\n/// @param {string} $icon - The name of the icon\r\n@function icon-attr($icon) {\r\n\t$attr: (\r\n\t\twidth: sprite-attr($icon, width),\r\n\t\theight: sprite-attr($icon, height),\r\n\t\tx: sprite-attr($icon, backgroundX),\r\n\t\ty: sprite-attr($icon, backgroundY)\r\n\t);\r\n\r\n\t@return $attr;\r\n}\r\n\r\n/// Get the width of an icon in em\r\n/// @param {string} $icon - The name of the icon\r\n@function icon_width($icon) {\r\n\t@return mq-px2em(sprite-attr($icon, width));\r\n}\r\n\r\n/// Get the height of an icon in em\r\n/// @param {string} $icon - The name of the icon\r\n@function icon_height($icon) {\r\n\t@return mq-px2em(sprite-attr($icon, height));\r\n}\r\n\r\n/// Assign the correct SVG background image and dimensions to the element\r\n%svgsprite {\r\n\tdisplay: inline-block;\r\n\tbackground-image: url(map-get($sprite, svgPath));\r\n\tbackground-size: mq-px2em(map-get($sprite, width)) mq-px2em(map-get($sprite, height));\r\n}\r\n\r\n\r\n/// Add an SVG sprite icon using em positioning\r\n/// @param {string} $icon - The name of the icon\r\n/// @param {string} $type [all] - The properties wanted (can be `all`, `size` or `bg`).\r\n/// - `all` ensures the icon has the background, position and size.\r\n/// - `size` is just for dimensions\r\n/// - `bg` just  applies the backgrounds to an element\r\n/// @example scss - Usage\r\n/// .class {\r\n/// \t@include sprite(arrow);\r\n/// \t&:hover {\r\n/// \t\t@include sprite(arrowDown, bg)\r\n/// \t}\r\n/// }\r\n///\r\n/// @example css - Output\r\n/// .class {\r\n/// \tdisplay: inline-block;\r\n/// \tbackground-image: url(\"../img/sprite.svg\");\r\n/// \tbackground-size: 34.25em 32.1875em;\r\n/// }\r\n///\r\n///\r\n/// .class {\r\n/// \twidth: 1.3125em;\r\n/// \theight: 1.3125em;\r\n/// \tbackground-position: -0.3125em -0.3125em;\r\n/// }\r\n/// .class:hover {\r\n/// \tbackground-position: -2.25em -2.25em;\r\n/// }\r\n@mixin svgsprite($icon, $type: all) {\r\n\t@if $type == all {\r\n\t\t// Shares the backgrounds\r\n\t\t@extend %svgsprite;\r\n\t}\r\n\r\n\t$iconMap: icon-attr($icon);\r\n\r\n\t// Outputs dimensions in em\r\n\t@if $type == all or $type == size {\r\n\t\twidth: mq-px2em(map-get($iconMap, width) + 1);\r\n\t\theight: mq-px2em(map-get($iconMap, height) + 1);\r\n\t}\r\n\r\n\t// Outputs background position in em\r\n\t@if $type == all or $type == bg {\r\n\t\tbackground-position: mq-px2em(map-get($iconMap, x) - 5) mq-px2em(map-get($iconMap, y) - 5);\r\n\t}\r\n}\r\n"]}