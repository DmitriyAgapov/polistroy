{"version":3,"sources":["tabbed-panels/tabbed-panels.scss","../styles/helpers/_mixins-svg.scss","tabbed-panels/tabbed-panels.css","../styles/helpers/_media-queries.scss"],"names":[],"mappings":"AAEA,yCC8EC,iBAAA,uBACA,gBAAA,MAAA,MD/ED,QAAA,GE6EE,SAAA,SACA,MAAA,KACA,OAAA,KACA,oBAAA,OAAA,OACA,MAAA,KACA,IAAA,KACA,KAAA,QACA,OAAA,KACA,QAAA,KAjFF,qCACE,QAAA,MAGF,oCACE,aAAA,KFTF,cAAA,EAUQ,OAAA,QACA,MAAA,KACA,UAAA,KACA,YAAA,IACA,YAAA,KACA,SAAA,SACA,QAAA,EACA,QAAA,EAAA,EAAA,KEIR,2CACE,cAAA,IAAA,MAAA,KAGF,+CFzBA,aAAA,EE6BA,qCCHE,QAAA,KDKA,WAAA,KACA,QAAA,KAAA,EAGF,4CACE,QAAA,MAGF,kDFvCA,WAAA,EE2CA,iDACE,cAAA,EAGF,6BF/CA,QAAA,YAAA,QAAA,YAAA,QAAA,KA4DQ,cAAA,KAAA,UAAA,KERR,mCFYQ,SAAA,SAYA,0BAAA,EAAA,eAAA,EAAA,MAAA,EACA,QAAA,MAKA,mBAAA,WAAA,IAAA,cAAA,WAAA,IAAA,WAAA,WAAA,IACA,aAAA,KACA,OAAA,QAEA,MAAA,KAEA,UAAA,KAxFR,YAAA,IE8DE,YAAA,KCpCA,QAAA,EDsCA,QAAA,EAAA,EAAA,KAGF,0CACE,QAAA,KAGF,8CACE,aAAA,EAgBF,mDACE,0BAAA,IAAA,eAAA,GAAA,MAAA,GACA,iBAAA,EAAA,kBAAA,EAAA,UAAA,EACA,MAAA,KACA,QAAA,KF5FF,WAAA,KEgGA,gEFkBQ,WAAA,EEdR,+DFpGA,cAAA,EAAA,kDEoHA,+CAVE,QAAA,KAGF,sEAYA,mEC/FE,IAAA,KH1BF,KAAA,QEiHE,kBAAA,eAAA,cAAA,eAAA,UAAA,eAGF,sFAcA,mFFYY,QAAA,MErBZ,uCACE,QAAA,EAGF,iDACE,kBAAA,WAAA,cAAA,WAAA,UAAA,WF9HF,sBA6JW,MAAA,KE1BT,OAAA,KAGF,yCACE,qCACE,QAAA,KAGF,mCF6BU,UAAA,KE3BR,MAAA,KFiCI,gEEdN,6DFhKF,cAAA,IAAA,MAAA,KG0BE,qCDgIA,mCF1JF,QAAA,YAAA,QAAA,YAAA,QAAA,KAAA,iBAAA,QAAA,cAAA,QAAA,gBAAA,eEgKA,0CACE,sBACE,OAAA,MAIJ,0CACE,eACE,OAAA,GAIJ,0CACE,uCACE,UAAA,MAIJ,yCACE,6BACE,QAAA,EAAA,KACA,WAAA,KAGF,mCACE,cAAA,IAAA,MAAA,QACA,MAAA,QAQA,QAAA,KAAA,EAAA,KAkBA,MAAA,KACA,aAAA,EAxBF,gDACE,cAAA,EAAA,MAAA,QAOF,yCACE,QAAA,MAGF,6EAwBA,0EAtBE,cAAA,IAAA,MAAA,QAGF,mDAwBA,mCAtBE,0BAAA,QAAA,eAAA,QAAA,MAAA","file":"../tabbed-panels.min.css","sourcesContent":["@import \"../../styles/helpers/_helpers\";\n\n.tabbed-panels {\n    @include max-screen(7667px) {\n        margin: 0;\n    }\n\n\n    .tabbed-panels__links {\n        display: block;\n    }\n    .tabbed-panels__link {\n        margin-right: 54px;\n        border-bottom: 0;\n        cursor: pointer;\n        color: $color-grey-dark;\n        font-size: map-get($fontSize, normaPlusPlus);\n        font-weight: 500;\n        line-height: 28px;\n        position: relative;\n        z-index: 2;\n        &.active {\n            border-bottom: 2px solid $color-grey-dark;\n        }\n\n        padding: 0 0 12px;\n        &:last-child {\n            margin-right: 0;\n        }\n    }\n    .tabbed-panels__block {\n        display: none;\n        background: #fff;\n        padding: 30px 0;\n        @include min-screen(768px) {\n            padding: 45px;\n        }\n\n        &.active {\n            display: block;\n        }\n\n        &  *:first-child {\n            margin-top: 0;\n        }\n        &  *:last-child {\n            margin-bottom: 0;\n        }\n    }\n    .tabbed-inner {\n        display: flex;\n        flex-wrap: wrap; // make sure it wraps\n        @include max-screen(767px) {\n            padding: 0 18px;\n            background: #fff;\n        }\n\n    }\n    .tabbed-inner label {\n        &:before {\n            display: none;\n        }\n        position: relative;\n        order: 1; // Put the labels first\n        display: block;\n        transition: background ease 0.2s;\n        margin-right: 54px;\n        @include max-screen(767px) {\n            border-bottom: 1px solid #D6D6D6;\n            color: #616161;\n\n        }\n        &:last-of-type {\n            @include max-screen(767px) {\n                border-bottom: 0px solid #D6D6D6;\n            }\n        }\n\n        cursor: pointer;\n        color: $color-grey-dark;\n        @include min-screen(768px) {\n            font-size: map-get($fontSize, normaPlus);\n            color: $color-grey-dark;\n        }\n        font-size: map-get($fontSizemax1023, normaPlusPlus);\n        font-weight: 500;\n        line-height: 28px;\n\n        z-index: 2;\n\n        padding: 0 0 12px;\n        &:last-child {\n            margin-right: 0;\n        }\n\n        &:after {\n            content: '';\n            position: absolute;\n            @include svgsprite(arrow-down);\n            right: 18px;\n            top: 28px;\n            left: initial;\n            bottom: 28px;\n            display: none;\n        }\n        @include max-screen(767px) {\n            padding: 17px 0 18px;\n            &:after {\n                display: block;\n            }\n        }\n    }\n    .tabbed-inner .tabbed-panels__block {\n        order: 99; // Put the tabs last\n        flex-grow: 1;\n        width: 100%;\n        display: none;\n        background: #fff;\n        & > *:first-child {\n            margin-top: 0;\n        }\n        & > *:last-child {\n            margin-bottom: 0;\n        }\n    }\n    .tabbed-inner input[type=\"checkbox\"], .tabbed-inner input[type=\"radio\"] {\n        display: none;\n\n    }\n    .tabbed-inner input[type=\"checkbox\"]:checked + label, .tabbed-inner input[type=\"radio\"]:checked + label {\n        &:last-of-type {\n            @include max-screen(767px) {\n                border-bottom: 1px solid #D6D6D6;\n            }\n        }\n\n\n        @include min-screen(768px) {\n            border-bottom: 2px solid $color-grey-dark;\n        }\n        &:after {\n\n            top: 28px;\n            left: initial;\n            transform: rotate(180deg);\n        }\n    }\n    .tabbed-inner input[type=\"checkbox\"]:checked + label + .tabbed-panels__block, .tabbed-inner input[type=\"radio\"]:checked + label + .tabbed-panels__block {\n        display: block;\n    }\n    .tabbed-panels__items {\n        a {\n            padding: 0;\n            @include max-screen(1023px) {\n                font-size: 13px;\n            }\n\n        }\n        .btn:before {\n           transform: scale(0.75);\n        }\n        @include min-screen(768px) {\n            display: flex;\n            justify-content: space-between;\n\n        }\n    }\n    .tabbed-panels__row {\n        @include min-screen(768px) {\n            display: flex;\n            justify-content: space-between;\n        }\n\n    }\n    iframe {\n        width: 100%;\n        height: 45vw;\n        @include min-screen(1280px) {\n            height: 35vw;\n        }\n    }\n    @include max-screen(767px){\n        .tabbed-inner .tabbed-panels__block,\n        .tabbed-inner label {\n            order: initial;\n        }\n        .tabbed-inner label {\n            width: 100%;\n            margin-right: 0;\n\n        }\n    }\n}\n","////\r\n/// @author Mike Street\r\n/// @group Sprite\r\n////\r\n\r\n\r\n// The following variable and function originate from the sass-mq library.\r\n// If you have already included it, you can eliminate the below\r\n// https://github.com/sass-mq/sass-mq/blob/master/_mq.scss\r\n\r\n/// Base font size on the `<body>` element\r\n/// @type Number (unit)\r\n$mq-base-font-size: 16px !default;\r\n\r\n/// Convert pixels to ems\r\n///\r\n/// @param {Number} $px - value to convert\r\n/// @param {Number} $base-font-size ($mq-base-font-size) - `<body>` font size\r\n///\r\n/// @example scss\r\n///  $font-size-in-ems: mq-px2em(16px);\r\n///  p { font-size: mq-px2em(16px); }\r\n///\r\n/// @requires $mq-base-font-size\r\n/// @returns {Number}\r\n@function mq-px2em($px, $base-font-size: $mq-base-font-size) {\r\n    @if unitless($px) {\r\n        @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\r\n        @return mq-px2em($px + 0px); // That may fail.\r\n    } @else if unit($px) == em {\r\n        @return $px;\r\n    }\r\n    @return $px;\r\n    // @return ($px / $base-font-size) * 1em;\r\n}\r\n\r\n\r\n/// Set the `$sprite` map\r\n/// @group sprite\r\n$sprite: map-get($icons, sprite) !default;\r\n\r\n/// Retrive an attributes value for a specific icon in the sprite map\r\n/// @param {string} $icon - The name of the icon\r\n/// @param {string} $attr - The attribute you wish to retrieve (e.g. width)\r\n@function sprite-attr($icon, $attr) {\r\n\t$newIcon: map-get($icons, $icon);\r\n\t@if $newIcon == null {\r\n\t\t@warn \"Can't find an icon with the name #{$icon}\";\r\n\t}\r\n\t@return map-get($newIcon, $attr);\r\n}\r\n\r\n/// Create a map with the specified icon of attributes\r\n/// @param {string} $icon - The name of the icon\r\n@function icon-attr($icon) {\r\n\t$attr: (\r\n\t\twidth: sprite-attr($icon, width),\r\n\t\theight: sprite-attr($icon, height),\r\n\t\tx: sprite-attr($icon, backgroundX),\r\n\t\ty: sprite-attr($icon, backgroundY)\r\n\t);\r\n\r\n\t@return $attr;\r\n}\r\n\r\n/// Get the width of an icon in em\r\n/// @param {string} $icon - The name of the icon\r\n@function icon_width($icon) {\r\n\t@return mq-px2em(sprite-attr($icon, width));\r\n}\r\n\r\n/// Get the height of an icon in em\r\n/// @param {string} $icon - The name of the icon\r\n@function icon_height($icon) {\r\n\t@return mq-px2em(sprite-attr($icon, height));\r\n}\r\n\r\n/// Assign the correct SVG background image and dimensions to the element\r\n%svgsprite {\r\n\tdisplay: inline-block;\r\n\tbackground-image: url(map-get($sprite, svgPath));\r\n\tbackground-size: mq-px2em(map-get($sprite, width)) mq-px2em(map-get($sprite, height));\r\n}\r\n\r\n\r\n/// Add an SVG sprite icon using em positioning\r\n/// @param {string} $icon - The name of the icon\r\n/// @param {string} $type [all] - The properties wanted (can be `all`, `size` or `bg`).\r\n/// - `all` ensures the icon has the background, position and size.\r\n/// - `size` is just for dimensions\r\n/// - `bg` just  applies the backgrounds to an element\r\n/// @example scss - Usage\r\n/// .class {\r\n/// \t@include sprite(arrow);\r\n/// \t&:hover {\r\n/// \t\t@include sprite(arrowDown, bg)\r\n/// \t}\r\n/// }\r\n///\r\n/// @example css - Output\r\n/// .class {\r\n/// \tdisplay: inline-block;\r\n/// \tbackground-image: url(\"../img/sprite.svg\");\r\n/// \tbackground-size: 34.25em 32.1875em;\r\n/// }\r\n///\r\n///\r\n/// .class {\r\n/// \twidth: 1.3125em;\r\n/// \theight: 1.3125em;\r\n/// \tbackground-position: -0.3125em -0.3125em;\r\n/// }\r\n/// .class:hover {\r\n/// \tbackground-position: -2.25em -2.25em;\r\n/// }\r\n@mixin svgsprite($icon, $type: all) {\r\n\t@if $type == all {\r\n\t\t// Shares the backgrounds\r\n\t\t@extend %svgsprite;\r\n\t}\r\n\r\n\t$iconMap: icon-attr($icon);\r\n\r\n\t// Outputs dimensions in em\r\n\t@if $type == all or $type == size {\r\n\t\twidth: mq-px2em(map-get($iconMap, width) + 1);\r\n\t\theight: mq-px2em(map-get($iconMap, height) + 1);\r\n\t}\r\n\r\n\t// Outputs background position in em\r\n\t@if $type == all or $type == bg {\r\n\t\tbackground-position: mq-px2em(map-get($iconMap, x) - 5) mq-px2em(map-get($iconMap, y) - 5);\r\n\t}\r\n}\r\n",".tabbed-panels .tabbed-inner label:after {\n  display: inline-block;\n  background-image: url(\"../img/sprite.svg\");\n  background-size: 521px 497px;\n}\n\n.tabbed-panels .tabbed-panels__links {\n  display: block;\n}\n\n.tabbed-panels .tabbed-panels__link {\n  margin-right: 54px;\n  border-bottom: 0;\n  cursor: pointer;\n  color: #333333;\n  font-size: 20px;\n  font-weight: 500;\n  line-height: 28px;\n  position: relative;\n  z-index: 2;\n  padding: 0 0 12px;\n}\n\n.tabbed-panels .tabbed-panels__link.active {\n  border-bottom: 2px solid #333333;\n}\n\n.tabbed-panels .tabbed-panels__link:last-child {\n  margin-right: 0;\n}\n\n.tabbed-panels .tabbed-panels__block {\n  display: none;\n  background: #fff;\n  padding: 30px 0;\n}\n\n.tabbed-panels .tabbed-panels__block.active {\n  display: block;\n}\n\n.tabbed-panels .tabbed-panels__block *:first-child {\n  margin-top: 0;\n}\n\n.tabbed-panels .tabbed-panels__block *:last-child {\n  margin-bottom: 0;\n}\n\n.tabbed-panels .tabbed-inner {\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.tabbed-panels .tabbed-inner label {\n  position: relative;\n  order: 1;\n  display: block;\n  transition: background ease 0.2s;\n  margin-right: 54px;\n  cursor: pointer;\n  color: #333333;\n  font-size: 15px;\n  font-weight: 500;\n  line-height: 28px;\n  z-index: 2;\n  padding: 0 0 12px;\n}\n\n.tabbed-panels .tabbed-inner label:before {\n  display: none;\n}\n\n.tabbed-panels .tabbed-inner label:last-child {\n  margin-right: 0;\n}\n\n.tabbed-panels .tabbed-inner label:after {\n  content: '';\n  position: absolute;\n  width: 14px;\n  height: 10px;\n  background-position: -276px -306px;\n  right: 18px;\n  top: 28px;\n  left: initial;\n  bottom: 28px;\n  display: none;\n}\n\n.tabbed-panels .tabbed-inner .tabbed-panels__block {\n  order: 99;\n  flex-grow: 1;\n  width: 100%;\n  display: none;\n  background: #fff;\n}\n\n.tabbed-panels .tabbed-inner .tabbed-panels__block > *:first-child {\n  margin-top: 0;\n}\n\n.tabbed-panels .tabbed-inner .tabbed-panels__block > *:last-child {\n  margin-bottom: 0;\n}\n\n.tabbed-panels .tabbed-inner input[type=\"checkbox\"],\n.tabbed-panels .tabbed-inner input[type=\"radio\"] {\n  display: none;\n}\n\n.tabbed-panels .tabbed-inner input[type=\"checkbox\"]:checked + label:after,\n.tabbed-panels .tabbed-inner input[type=\"radio\"]:checked + label:after {\n  top: 28px;\n  left: initial;\n  transform: rotate(180deg);\n}\n\n.tabbed-panels .tabbed-inner input[type=\"checkbox\"]:checked + label + .tabbed-panels__block,\n.tabbed-panels .tabbed-inner input[type=\"radio\"]:checked + label + .tabbed-panels__block {\n  display: block;\n}\n\n.tabbed-panels .tabbed-panels__items a {\n  padding: 0;\n}\n\n.tabbed-panels .tabbed-panels__items .btn:before {\n  transform: scale(0.75);\n}\n\n.tabbed-panels iframe {\n  width: 100%;\n  height: 45vw;\n}\n\n@media only screen and (min-width: 768px) {\n  .tabbed-panels .tabbed-panels__block {\n    padding: 45px;\n  }\n\n  .tabbed-panels .tabbed-inner label {\n    font-size: 16px;\n    color: #333333;\n  }\n\n  .tabbed-panels .tabbed-inner input[type=\"checkbox\"]:checked + label,\n  .tabbed-panels .tabbed-inner input[type=\"radio\"]:checked + label {\n    border-bottom: 2px solid #333333;\n  }\n\n  .tabbed-panels .tabbed-panels__items {\n    display: flex;\n    justify-content: space-between;\n  }\n\n  .tabbed-panels .tabbed-panels__row {\n    display: flex;\n    justify-content: space-between;\n  }\n}\n\n@media only screen and (min-width: 1280px) {\n  .tabbed-panels iframe {\n    height: 35vw;\n  }\n}\n\n@media only screen and (max-width: 7667px) {\n  .tabbed-panels {\n    margin: 0;\n  }\n}\n\n@media only screen and (max-width: 1023px) {\n  .tabbed-panels .tabbed-panels__items a {\n    font-size: 13px;\n  }\n}\n\n@media only screen and (max-width: 767px) {\n  .tabbed-panels .tabbed-inner {\n    padding: 0 18px;\n    background: #fff;\n  }\n\n  .tabbed-panels .tabbed-inner label {\n    border-bottom: 1px solid #D6D6D6;\n    color: #616161;\n  }\n\n  .tabbed-panels .tabbed-inner label:last-of-type {\n    border-bottom: 0px solid #D6D6D6;\n  }\n\n  .tabbed-panels .tabbed-inner label {\n    padding: 17px 0 18px;\n  }\n\n  .tabbed-panels .tabbed-inner label:after {\n    display: block;\n  }\n\n  .tabbed-panels .tabbed-inner input[type=\"checkbox\"]:checked + label:last-of-type,\n  .tabbed-panels .tabbed-inner input[type=\"radio\"]:checked + label:last-of-type {\n    border-bottom: 1px solid #D6D6D6;\n  }\n\n  .tabbed-panels .tabbed-inner .tabbed-panels__block,\n  .tabbed-panels .tabbed-inner label {\n    order: initial;\n  }\n\n  .tabbed-panels .tabbed-inner label {\n    width: 100%;\n    margin-right: 0;\n  }\n}","//  Author: Rafal Bromirski\r\n//  www: http://rafalbromirski.com/\r\n//  github: http://github.com/paranoida/sass-mediaqueries\r\n//\r\n//  Licensed under a MIT License\r\n//\r\n//  Version:\r\n//  1.6.1\r\n\r\n// --- generator ---------------------------------------------------------------\r\n\r\n@mixin mq($args...) {\r\n  $media-type: 'only screen';\r\n  $media-type-key: 'media-type';\r\n  $args: keywords($args);\r\n  $expr: '';\r\n\r\n  @if map-has-key($args, $media-type-key) {\r\n    $media-type: map-get($args, $media-type-key);\r\n    $args: map-remove($args, $media-type-key);\r\n  }\r\n\r\n  @each $key, $value in $args {\r\n    @if $value {\r\n      $expr: \"#{$expr} and (#{$key}: #{$value})\";\r\n    }\r\n  }\r\n\r\n  @media #{$media-type} #{$expr} {\r\n    @content;\r\n  }\r\n}\r\n\r\n// --- screen ------------------------------------------------------------------\r\n\r\n@mixin screen($min, $max, $orientation: false) {\r\n  @include mq($min-width: $min, $max-width: $max, $orientation: $orientation) {\r\n    @content;\r\n  }\r\n}\r\n\r\n@mixin max-screen($max) {\r\n  @include mq($max-width: $max) {\r\n    @content;\r\n  }\r\n}\r\n\r\n@mixin min-screen($min) {\r\n  @include mq($min-width: $min) {\r\n    @content;\r\n  }\r\n}\r\n\r\n@mixin screen-height($min, $max, $orientation: false) {\r\n  @include mq($min-height: $min, $max-height: $max, $orientation: $orientation) {\r\n    @content;\r\n  }\r\n}\r\n\r\n@mixin max-screen-height($max) {\r\n  @include mq($max-height: $max) {\r\n    @content;\r\n  }\r\n}\r\n\r\n@mixin min-screen-height($min) {\r\n  @include mq($min-height: $min) {\r\n    @content;\r\n  }\r\n}\r\n\r\n// --- hdpi --------------------------------------------------------------------\r\n\r\n@mixin hdpi($ratio: 1.3) {\r\n  @media only screen and (-webkit-min-device-pixel-ratio: $ratio),\r\n  only screen and (min-resolution: #{round($ratio*96)}dpi) {\r\n    @content;\r\n  }\r\n}\r\n\r\n// --- hdtv --------------------------------------------------------------------\r\n\r\n@mixin hdtv($standard: '1080') {\r\n  $min-width: false;\r\n  $min-height: false;\r\n\r\n  $standards: ('720p', 1280px, 720px)\r\n              ('1080', 1920px, 1080px)\r\n              ('2K', 2048px, 1080px)\r\n              ('4K', 4096px, 2160px);\r\n\r\n  @each $s in $standards {\r\n    @if $standard == nth($s, 1) {\r\n      $min-width: nth($s, 2);\r\n      $min-height: nth($s, 3);\r\n    }\r\n  }\r\n\r\n  @include mq(\r\n    $min-device-width: $min-width,\r\n    $min-device-height: $min-height,\r\n    $min-width: $min-width,\r\n    $min-height: $min-height\r\n  ) {\r\n    @content;\r\n  }\r\n}\r\n\r\n// --- iphone4 -----------------------------------------------------------------\r\n\r\n@mixin iphone4($orientation: false) {\r\n  $min: 320px;\r\n  $max: 480px;\r\n  $pixel-ratio: 2;\r\n  $aspect-ratio: '2/3';\r\n\r\n  @include mq(\r\n    $min-device-width: $min,\r\n    $max-device-width: $max,\r\n    $orientation: $orientation,\r\n    $device-aspect-ratio: $aspect-ratio,\r\n    $-webkit-device-pixel-ratio: $pixel-ratio\r\n  ) {\r\n    @content;\r\n  }\r\n}\r\n\r\n// --- iphone5 -----------------------------------------------------------------\r\n\r\n@mixin iphone5($orientation: false) {\r\n  $min: 320px;\r\n  $max: 568px;\r\n  $pixel-ratio: 2;\r\n  $aspect-ratio: '40/71';\r\n\r\n  @include mq(\r\n    $min-device-width: $min,\r\n    $max-device-width: $max,\r\n    $orientation: $orientation,\r\n    $device-aspect-ratio: $aspect-ratio,\r\n    $-webkit-device-pixel-ratio: $pixel-ratio\r\n  ) {\r\n    @content;\r\n  }\r\n}\r\n\r\n// --- iphone6 -----------------------------------------------------------------\r\n\r\n@mixin iphone6($orientation: false) {\r\n  $min: 375px;\r\n  $max: 667px;\r\n  $pixel-ratio: 2;\r\n\r\n  @include mq(\r\n    $min-device-width: $min,\r\n    $max-device-width: $max,\r\n    $orientation: $orientation,\r\n    $-webkit-device-pixel-ratio: $pixel-ratio\r\n  ) {\r\n    @content;\r\n  }\r\n}\r\n\r\n// --- iphone6 plus ------------------------------------------------------------\r\n\r\n@mixin iphone6-plus($orientation: false) {\r\n  $min: 414px;\r\n  $max: 736px;\r\n  $pixel-ratio: 3;\r\n\r\n  @include mq(\r\n    $min-device-width: $min,\r\n    $max-device-width: $max,\r\n    $orientation: $orientation,\r\n    $-webkit-device-pixel-ratio: $pixel-ratio\r\n  ) {\r\n    @content;\r\n  }\r\n}\r\n\r\n// --- ipad (all) --------------------------------------------------------------\r\n\r\n@mixin ipad($orientation: false) {\r\n  $min: 768px;\r\n  $max: 1024px;\r\n\r\n  @include mq(\r\n    $min-device-width: $min,\r\n    $max-device-width: $max,\r\n    $orientation: $orientation\r\n  ) {\r\n    @content;\r\n  }\r\n}\r\n\r\n// --- ipad-retina -------------------------------------------------------------\r\n\r\n@mixin ipad-retina($orientation: false) {\r\n  $min: 768px;\r\n  $max: 1024px;\r\n  $pixel-ratio: 2;\r\n\r\n  @include mq(\r\n    $min-device-width: $min,\r\n    $max-device-width: $max,\r\n    $orientation: $orientation,\r\n    $-webkit-device-pixel-ratio: $pixel-ratio\r\n  ) {\r\n    @content;\r\n  }\r\n}\r\n\r\n// --- orientation -------------------------------------------------------------\r\n\r\n@mixin landscape() {\r\n  @include mq($orientation: landscape) {\r\n    @content;\r\n  }\r\n}\r\n\r\n@mixin portrait() {\r\n  @include mq($orientation: portrait) {\r\n    @content;\r\n  }\r\n}\r\n"]}